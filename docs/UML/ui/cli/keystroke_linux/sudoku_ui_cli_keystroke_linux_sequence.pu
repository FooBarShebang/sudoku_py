@startuml sudoku_ui_cli_keystroke_linux_sequence

title Sequence Diagram of the Key Press Aquisition (Linux)

actor User <<human>>

actor KeyboardListenerLinux <<class>>

actor InputBufferLinux <<class>>

actor Stopper <<threading.Event>>

actor InputThread <<threading.Thread>>

actor ReadSTDIN_NonBlocking_Linux <<function>>

actor stdin <<stream>>

== Initialization ==

User --> KeyboardListenerLinux : init

activate KeyboardListenerLinux

KeyboardListenerLinux --> KeyboardListenerLinux : _ _init_ _()

KeyboardListenerLinux --> InputBufferLinux : init

activate InputBufferLinux

InputBufferLinux --> InputBufferLinux : _ _init_ _()

KeyboardListenerLinux --> Stopper : init

activate Stopper

Stopper --> Stopper : _ _init_ _()

KeyboardListenerLinux --> InputThread : init [ReadSTDIN_NonBlocking_Linux, InputBuffer, Stopper]

activate InputThread

InputThread --> InputThread : _ _init_ _()

InputThread --> ReadSTDIN_NonBlocking_Linux : start [InputBuffer, Stopper]

activate ReadSTDIN_NonBlocking_Linux

== stdin listening ==

loop while Stopper is not stream
    ReadSTDIN_NonBlocking_Linux --> stdin : check
    
    alt no input
        stdin --> ReadSTDIN_NonBlocking_Linux : [no data]
    else data available
        User --> stdin : key press
        
        stdin --> ReadSTDIN_NonBlocking_Linux : [Ok]
        
        loop while not proper sequence
            ReadSTDIN_NonBlocking_Linux --> stdin : get 1 byte
            
            stdin --> ReadSTDIN_NonBlocking_Linux : [first byte]
        end
        
        ReadSTDIN_NonBlocking_Linux --> InputBufferLinux : [unicode character(s)]
    end
    
    == Keystroke request ==
    
    User --> KeyboardListenerLinux : GetKeystroke
    
    activate KeyboardListenerLinux
    
    loop while no data
        KeyboardListenerLinux --> InputBufferLinux : check
        
        alt no data
            InputBufferLinux --> KeyboardListenerLinux : [None]
        else there is data
            InputBufferLinux --> KeyboardListenerLinux : [unicode character(s)]
        end
    end
    
    deactivate KeyboardListenerLinux
    
    KeyboardListenerLinux --> User : [unicode character(s)]
    
    == Finalization ==
    
    User --> KeyboardListenerLinux : del
    
    KeyboardListenerLinux --> Stopper : set

end

destroy ReadSTDIN_NonBlocking_Linux

ReadSTDIN_NonBlocking_Linux --> InputThread : [ended]

destroy InputThread

InputThread --> KeyboardListenerLinux : [stopped]

destroy KeyboardListenerLinux

destroy InputBufferLinux

destroy Stopper

@enduml